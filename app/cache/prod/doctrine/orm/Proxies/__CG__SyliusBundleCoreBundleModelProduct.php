<?php

namespace Proxies\__CG__\Sylius\Bundle\CoreBundle\Model;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Product extends \Sylius\Bundle\CoreBundle\Model\Product implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'shortDescription', 'variantSelectionMethod', 'taxons', 'taxCategory', 'shippingCategory', 'restrictedZone', 'variants', 'options', 'id', 'name', 'slug', 'description', 'availableOn', 'metaKeywords', 'metaDescription', 'properties', 'createdAt', 'updatedAt', 'deletedAt');
        }

        return array('__isInitialized__', 'shortDescription', 'variantSelectionMethod', 'taxons', 'taxCategory', 'shippingCategory', 'restrictedZone', 'variants', 'options', 'id', 'name', 'slug', 'description', 'availableOn', 'metaKeywords', 'metaDescription', 'properties', 'createdAt', 'updatedAt', 'deletedAt');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Product $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getSku()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSku', array());

        return parent::getSku();
    }

    /**
     * {@inheritDoc}
     */
    public function setSku($sku)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSku', array($sku));

        return parent::setSku($sku);
    }

    /**
     * {@inheritDoc}
     */
    public function getVariantSelectionMethod()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVariantSelectionMethod', array());

        return parent::getVariantSelectionMethod();
    }

    /**
     * {@inheritDoc}
     */
    public function setVariantSelectionMethod($variantSelectionMethod)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVariantSelectionMethod', array($variantSelectionMethod));

        return parent::setVariantSelectionMethod($variantSelectionMethod);
    }

    /**
     * {@inheritDoc}
     */
    public function isVariantSelectionMethodChoice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isVariantSelectionMethodChoice', array());

        return parent::isVariantSelectionMethodChoice();
    }

    /**
     * {@inheritDoc}
     */
    public function getVariantSelectionMethodLabel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVariantSelectionMethodLabel', array());

        return parent::getVariantSelectionMethodLabel();
    }

    /**
     * {@inheritDoc}
     */
    public function getTaxons()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaxons', array());

        return parent::getTaxons();
    }

    /**
     * {@inheritDoc}
     */
    public function setTaxons(\Doctrine\Common\Collections\Collection $taxons)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaxons', array($taxons));

        return parent::setTaxons($taxons);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', array());

        return parent::getPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice($price)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', array($price));

        return parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function getShortDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShortDescription', array());

        return parent::getShortDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setShortDescription($shortDescription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShortDescription', array($shortDescription));

        return parent::setShortDescription($shortDescription);
    }

    /**
     * {@inheritDoc}
     */
    public function getTaxCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaxCategory', array());

        return parent::getTaxCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setTaxCategory(\Sylius\Bundle\TaxationBundle\Model\TaxCategoryInterface $category = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaxCategory', array($category));

        return parent::setTaxCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getShippingCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShippingCategory', array());

        return parent::getShippingCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setShippingCategory(\Sylius\Bundle\ShippingBundle\Model\ShippingCategoryInterface $category = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShippingCategory', array($category));

        return parent::setShippingCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getRestrictedZone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRestrictedZone', array());

        return parent::getRestrictedZone();
    }

    /**
     * {@inheritDoc}
     */
    public function setRestrictedZone(\Sylius\Bundle\AddressingBundle\Model\ZoneInterface $zone = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRestrictedZone', array($zone));

        return parent::setRestrictedZone($zone);
    }

    /**
     * {@inheritDoc}
     */
    public function getImages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImages', array());

        return parent::getImages();
    }

    /**
     * {@inheritDoc}
     */
    public function getImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', array());

        return parent::getImage();
    }

    /**
     * {@inheritDoc}
     */
    public function isAvailable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAvailable', array());

        return parent::isAvailable();
    }

    /**
     * {@inheritDoc}
     */
    public function getAvailableOn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvailableOn', array());

        return parent::getAvailableOn();
    }

    /**
     * {@inheritDoc}
     */
    public function setAvailableOn(\DateTime $availableOn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAvailableOn', array($availableOn));

        return parent::setAvailableOn($availableOn);
    }

    /**
     * {@inheritDoc}
     */
    public function getMasterVariant()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMasterVariant', array());

        return parent::getMasterVariant();
    }

    /**
     * {@inheritDoc}
     */
    public function setMasterVariant(\Sylius\Bundle\VariableProductBundle\Model\VariantInterface $masterVariant)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMasterVariant', array($masterVariant));

        return parent::setMasterVariant($masterVariant);
    }

    /**
     * {@inheritDoc}
     */
    public function hasVariants()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasVariants', array());

        return parent::hasVariants();
    }

    /**
     * {@inheritDoc}
     */
    public function getVariants()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVariants', array());

        return parent::getVariants();
    }

    /**
     * {@inheritDoc}
     */
    public function getAvailableVariants()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvailableVariants', array());

        return parent::getAvailableVariants();
    }

    /**
     * {@inheritDoc}
     */
    public function setVariants(\Doctrine\Common\Collections\Collection $variants)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVariants', array($variants));

        return parent::setVariants($variants);
    }

    /**
     * {@inheritDoc}
     */
    public function addVariant(\Sylius\Bundle\VariableProductBundle\Model\VariantInterface $variant)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addVariant', array($variant));

        return parent::addVariant($variant);
    }

    /**
     * {@inheritDoc}
     */
    public function removeVariant(\Sylius\Bundle\VariableProductBundle\Model\VariantInterface $variant)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeVariant', array($variant));

        return parent::removeVariant($variant);
    }

    /**
     * {@inheritDoc}
     */
    public function hasVariant(\Sylius\Bundle\VariableProductBundle\Model\VariantInterface $variant)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasVariant', array($variant));

        return parent::hasVariant($variant);
    }

    /**
     * {@inheritDoc}
     */
    public function hasOptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasOptions', array());

        return parent::hasOptions();
    }

    /**
     * {@inheritDoc}
     */
    public function getOptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOptions', array());

        return parent::getOptions();
    }

    /**
     * {@inheritDoc}
     */
    public function setOptions(\Doctrine\Common\Collections\Collection $options)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOptions', array($options));

        return parent::setOptions($options);
    }

    /**
     * {@inheritDoc}
     */
    public function addOption(\Sylius\Bundle\VariableProductBundle\Model\OptionInterface $option)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOption', array($option));

        return parent::addOption($option);
    }

    /**
     * {@inheritDoc}
     */
    public function removeOption(\Sylius\Bundle\VariableProductBundle\Model\OptionInterface $option)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeOption', array($option));

        return parent::removeOption($option);
    }

    /**
     * {@inheritDoc}
     */
    public function hasOption(\Sylius\Bundle\VariableProductBundle\Model\OptionInterface $option)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasOption', array($option));

        return parent::hasOption($option);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlug()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlug', array());

        return parent::getSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function setSlug($slug)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlug', array($slug));

        return parent::setSlug($slug);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaKeywords()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaKeywords', array());

        return parent::getMetaKeywords();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetaKeywords($metaKeywords)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetaKeywords', array($metaKeywords));

        return parent::setMetaKeywords($metaKeywords);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaDescription', array());

        return parent::getMetaDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetaDescription($metaDescription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetaDescription', array($metaDescription));

        return parent::setMetaDescription($metaDescription);
    }

    /**
     * {@inheritDoc}
     */
    public function getProperties()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProperties', array());

        return parent::getProperties();
    }

    /**
     * {@inheritDoc}
     */
    public function setProperties(\Doctrine\Common\Collections\Collection $properties)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProperties', array($properties));

        return parent::setProperties($properties);
    }

    /**
     * {@inheritDoc}
     */
    public function addProperty(\Sylius\Bundle\ProductBundle\Model\ProductPropertyInterface $property)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProperty', array($property));

        return parent::addProperty($property);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProperty(\Sylius\Bundle\ProductBundle\Model\ProductPropertyInterface $property)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProperty', array($property));

        return parent::removeProperty($property);
    }

    /**
     * {@inheritDoc}
     */
    public function hasProperty(\Sylius\Bundle\ProductBundle\Model\ProductPropertyInterface $property)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasProperty', array($property));

        return parent::hasProperty($property);
    }

    /**
     * {@inheritDoc}
     */
    public function hasPropertyByName($propertyName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasPropertyByName', array($propertyName));

        return parent::hasPropertyByName($propertyName);
    }

    /**
     * {@inheritDoc}
     */
    public function getPropertyByName($propertyName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPropertyByName', array($propertyName));

        return parent::getPropertyByName($propertyName);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', array());

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', array($createdAt));

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', array());

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTime $updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', array($updatedAt));

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function isDeleted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDeleted', array());

        return parent::isDeleted();
    }

    /**
     * {@inheritDoc}
     */
    public function getDeletedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeletedAt', array());

        return parent::getDeletedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeletedAt(\DateTime $deletedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeletedAt', array($deletedAt));

        return parent::setDeletedAt($deletedAt);
    }

}
